@page "/contact/{Id:int?}"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>@(Id == null ? "Add Contact" : "Edit Contact")</h3>

<EditForm Model="@contact" OnValidSubmit="SaveContact" class="p-4 border rounded shadow-sm bg-light">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger mb-3" />

    <h4 class="mb-3">@((Id == null) ? "Add Contact" : "Edit Contact")</h4>

    <div class="mb-3">
        <label class="form-label">First Name</label>
        <InputText class="form-control" @bind-Value="contact.FirstName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Last Name</label>
        <InputText class="form-control" @bind-Value="contact.LastName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText type="email" class="form-control" @bind-Value="contact.Email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Phone Number</label>
        <InputText class="form-control" @bind-Value="contact.PhoneNumber" />
    </div>

    <div class="mb-3">
        <label class="form-label">Address</label>
        <InputText class="form-control" @bind-Value="contact.Address" />
    </div>

    <div class="mb-3">
        <label class="form-label">Date of Birth</label>
        <InputDate class="form-control" @bind-Value="contact.DateOfBirth" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>


@code {
    [Parameter] public int? Id { get; set; }
    ContactUI.Models.Contact contact = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            contact = await Http.GetFromJsonAsync<ContactUI.Models.Contact>($"contacts/{Id}");
        }
    }

    async Task SaveContact()
    {
        if (Id == null)
            await Http.PostAsJsonAsync("contacts", contact);
        else
            await Http.PutAsJsonAsync($"contacts/{Id}", contact);

        Nav.NavigateTo("/");
    }
}
