@page "/"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Contacts</h3>
<button @onclick="@(() => Nav.NavigateTo("/contact"))">Add Contact</button>

@if (contacts == null)
{
    <p>Loading...</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover mt-4">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Address</th>
                    <th>DOB</th>
                    <th style="width: 150px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in contacts)
                {
                    <tr>
                        <td>@c.FirstName @c.LastName</td>
                        <td>@c.Email</td>
                        <td>@c.PhoneNumber</td>
                        <td>@c.Address</td>
                        <td>@(c.DateOfBirth?.ToString("yyyy-MM-dd"))</td>
                        <td>
                            <button class="btn btn-sm btn-primary me-2" @onclick='() => Nav.NavigateTo($"/contact/{c.Id}")'>Edit</button>
                            <button class="btn btn-sm btn-danger" @onclick="() => ConfirmAndDelete(c.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

}

@if (showConfirmModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this contact?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                    <button class="btn btn-danger" @onclick="DeleteConfirmed">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    List<ContactUI.Models.Contact>? contacts;
    bool showConfirmModal = false;
    int contactIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        contacts = await Http.GetFromJsonAsync<List<ContactUI.Models.Contact>>("contacts");
    }

    void ConfirmAndDelete(int id)
    {
        contactIdToDelete = id;
        showConfirmModal = true;
    }

    void CloseModal()
    {
        showConfirmModal = false;
        contactIdToDelete = 0;
    }

    async Task DeleteConfirmed()
    {
        await Http.DeleteAsync($"contacts/{contactIdToDelete}");
        contacts = await Http.GetFromJsonAsync<List<ContactUI.Models.Contact>>("contacts");
        CloseModal();
    }
}
